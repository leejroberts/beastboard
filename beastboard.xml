<?xml version="1.0"?>
<root>
    <item>
        <name>SPACE for symbols</name>
        <item>
            <name>holding spacebar gives symbols</name><!-- hold spacebar for the following triggers -->
            <appendix>Overlay (=|)etc. onto base keys (ASDFGHJKL)</appendix><!-- NOTE: all brackets are left bracket on homerow; right bracket: key directly above -->
            <identifier vk_config="true">notsave.homerow_symbols </identifier>
            <!-- number row -->
            <autogen>__KeyToKey__ KeyCode::KEY_1, KeyCode::C, KeyCode::A, KeyCode::R, KeyCode::B,
                KeyCode::O, KeyCode::N, KeyCode::KEY_1, KeyCode::KEY_2, KeyCode::DOT,
                KeyCode::KEY_0, KeyCode::KEY_1, KeyCode::KEY_1</autogen>                                <!--1 => carbon12.011 -->
             <autogen>__KeyToKey__ KeyCode::KEY_2, KeyCode::KEY_2, KeyCode::KEY_0, KeyCode::KEY_2,
                                  KeyCode::KEY_2, KeyCode::A, ModifierFlag::SHIFT_L, KeyCode::L,
                                  KeyCode::L, KeyCode::Y, KeyCode::L,
                                  ModifierFlag::SHIFT_L, KeyCode::E, KeyCode::E</autogen>               <!--2 => 2022AllyLee -->
            <!--left hand top row-->
            <autogen>__KeyToKey__ KeyCode::Q, KeyCode::EQUAL, ModifierFlag::SHIFT_L</autogen>           <!-- Q => + -->
            <autogen>__KeyToKey__ KeyCode::W, KeyCode::MINUS</autogen>                                  <!-- W => - (minus)-->
            <autogen>__KeyToKey__ KeyCode::E, KeyCode::KEY_2, ModifierFlag::SHIFT_L</autogen>           <!-- E => @ -->
            <autogen>__KeyToKey__ KeyCode::R, KeyCode::MINUS, ModifierFlag::SHIFT_L</autogen>           <!-- R => _ (underscore) -->
            <autogen>__KeyToKey__ KeyCode::T, KeyCode::KEY_4, ModifierFlag::SHIFT_L </autogen>          <!-- T => $ -->
            
            <!-- left hand home row-->
            <autogen>__KeyToKey__ KeyCode::A, KeyCode::KEY_7, ModifierFlag::SHIFT_L</autogen>           <!-- A => & -->
            <autogen>__KeyToKey__ KeyCode::S, KeyCode::BACKSLASH, ModifierFlag::SHIFT_L,</autogen>      <!-- S => | -->
            <autogen>__KeyToKey__ KeyCode::D, KeyCode::EQUAL</autogen>                                  <!-- D => = -->
            <autogen>__KeyToKey__ KeyCode::F, KeyCode::KEY_3, ModifierFlag::SHIFT_L</autogen>           <!-- F => # -->
            <autogen>__KeyToKey__ KeyCode::G, KeyCode::KEY_1, ModifierFlag::SHIFT_L</autogen>           <!-- G => ! -->
            <autogen>__KeyToKey__ KeyCode::V, KeyCode::KEY_8, ModifierFlag::SHIFT_L</autogen>           <!-- V => * -->
            
            
            <!-- right hand over under brackets-->
            <autogen>__KeyToKey__ KeyCode::H, KeyCode::BRACKET_LEFT, KeyCode::BRACKET_RIGHT,
                                              KeyCode::CURSOR_LEFT</autogen>                            <!-- H => [] backspace -->
            <autogen>__KeyToKey__ KeyCode::Y, KeyCode::BRACKET_RIGHT</autogen>                          <!-- Y => ] -->
            <autogen>__KeyToKey__ KeyCode::J, KeyCode::BRACKET_LEFT, ModifierFlag::SHIFT_L,
                                              KeyCode::BRACKET_RIGHT, ModifierFlag::SHIFT_L,
                                              KeyCode::CURSOR_LEFT</autogen>                            <!-- J => {} backspace -->
            <autogen>__KeyToKey__ KeyCode::U, KeyCode::BRACKET_RIGHT, ModifierFlag::SHIFT_L</autogen>   <!-- U => } -->
            <autogen>__KeyToKey__ KeyCode::K, KeyCode::KEY_9, ModifierFlag::SHIFT_L,
                                  KeyCode::KEY_0, ModifierFlag::SHIFT_L,
                                  KeyCode::CURSOR_LEFT</autogen>                                        <!-- K => () backspace -->
            <autogen>__KeyToKey__ KeyCode::I, KeyCode::KEY_0, ModifierFlag::SHIFT_L</autogen>           <!-- I => ) -->
            <autogen>__KeyToKey__ KeyCode::L, KeyCode::COMMA, ModifierFlag::SHIFT_L</autogen>           <!-- L => < -->
            <autogen>__KeyToKey__ KeyCode::O, KeyCode::DOT, ModifierFlag::SHIFT_L</autogen>             <!-- O => > -->
            
            <!--right hand top row: other -->
            <autogen>__KeyToKey__ KeyCode::P, KeyCode::KEY_5, ModifierFlag::SHIFT_L</autogen>           <!-- P => % -->
            
            <!--right hand home row: other-->
            <autogen>__KeyToKey__ KeyCode::SEMICOLON, KeyCode::SEMICOLON</autogen>                      <!-- ; => ; (note: colon and semi-colon are reversed) -->
            <autogen>__KeyToKey__ KeyCode::QUOTE, KeyCode::QUOTE, ModifierFlag::SHIFT_L</autogen>       <!-- ' => " -->
            
            <!--right hand bottom row -->
            <autogen>__KeyToKey__ KeyCode::TAB, KeyCode::COMMA, ModifierFlag::SHIFT_L,
                                  KeyCode::KEY_1, ModifierFlag::SHIFT_L,
                                  KeyCode::MINUS, KeyCode::MINUS,KeyCode::SPACE,
                                  KeyCode::MINUS, KeyCode::MINUS, KeyCode::DOT,
                                  ModifierFlag::SHIFT_L, KeyCode::CURSOR_LEFT, KeyCode::CURSOR_LEFT,
                                  KeyCode::CURSOR_LEFT, KeyCode::CURSOR_LEFT</autogen>                              <!-- TAB =>  "html comment" -->
            <autogen>__KeyToKey__ KeyCode::N,KeyCode::QUOTE,KeyCode::QUOTE,
                                  KeyCode::CURSOR_LEFT</autogen>                                                    <!-- N => '' -->
            <autogen>__KeyToKey__ KeyCode::M, KeyCode::QUOTE, ModifierFlag::SHIFT_L,
                                  KeyCode::QUOTE, ModifierFlag::SHIFT_L, KeyCode::CURSOR_LEFT</autogen>             <!-- M => "" auto selects backwards in case you forgot to qoute a string -->
            <autogen>__KeyToKey__ KeyCode::DOT, KeyCode::COMMA, ModifierFlag::SHIFT_L, KeyCode::KEY_5,
                                  ModifierFlag::SHIFT_L, KeyCode::SPACE, ModifierFlag::SHIFT_L,
                                  KeyCode::KEY_5,ModifierFlag::SHIFT_L, KeyCode::DOT, ModifierFlag::SHIFT_L,
                                  KeyCode::CURSOR_LEFT,KeyCode::CURSOR_LEFT, KeyCode::CURSOR_LEFT</autogen>         <!-- . => <% %> (imbedded ruby notation)-->
            <autogen>__KeyToKey__ KeyCode::COMMA, KeyCode::COMMA, ModifierFlag::SHIFT_L, KeyCode::KEY_5,
                                  ModifierFlag::SHIFT_L, KeyCode::EQUAL, KeyCode::SPACE, ModifierFlag::SHIFT_L,
                                  KeyCode::KEY_5, ModifierFlag::SHIFT_L, KeyCode::DOT, ModifierFlag::SHIFT_L,
                                  KeyCode::CURSOR_LEFT, KeyCode::CURSOR_LEFT, KeyCode::CURSOR_LEFT</autogen>        <!-- , => <%= %> (insert imbedded ruby notation)-->
            <autogen>__KeyToKey__ KeyCode::SLASH, KeyCode::SLASH, ModifierFlag::SHIFT_L</autogen>                   <!-- / => ? (fix to get ? with shift AND spacebar)-->
            
        </item>
        <item>
            <name>Hold Space+ASDFGHJKL; to symbols</name>
            <identifier>remap.space_to_homerow_symbols</identifier>
            <autogen>__KeyOverlaidModifier__ KeyCode::SPACE, KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_homerow_symbols, KeyCode::SPACE</autogen>
        </item>
    </item>
    
    <!-- holding down J makes left hand navigation buttons -->
<!--    <item>-->
<!--        <name>J for navigation (old)</name>-->
<!--        <item>-->
<!--            <name>Home Row Arrows</name>-->
<!--            <appendix>arrows and quick movements under left hand with j depressed</appendix>-->
<!--            <identifier vk_config="true">notsave.homerow_chickens</identifier>                                                <!--while J is depressed...-->
<!--            <autogen>__KeyToKey__ KeyCode::S, KeyCode::CURSOR_LEFT</autogen>                                                  <!--S => left -->
<!--            <autogen>__KeyToKey__ KeyCode::D, KeyCode::CURSOR_RIGHT</autogen>                                                 <!--D => right-->
<!--            <autogen>__KeyToKey__ KeyCode::F, KeyCode::CURSOR_DOWN</autogen>                                                  <!--F => down -->
<!--            <autogen>__KeyToKey__ KeyCode::R, KeyCode::CURSOR_UP</autogen>                                                    <!--R => up   -->
<!--            <autogen>__KeyToKey__ KeyCode::C, KeyCode::CURSOR_RIGHT, ModifierFlag:: OPTION_L</autogen>                        <!--C => next word right-->
<!--            <autogen>__KeyToKey__ KeyCode::X, KeyCode::CURSOR_LEFT, ModifierFlag:: OPTION_L</autogen>                         <!--X => next word left-->
<!--            <autogen>__KeyToKey__ KeyCode::W, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>                        <!--W => end of line-->
<!--            <autogen>__KeyToKey__ KeyCode::Q, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>                         <!--Q => start of line-->
<!--            <autogen>__KeyToKey__ KeyCode::KEY_4, KeyCode::CURSOR_UP, KeyCode::CURSOR_UP, KeyCode::CURSOR_UP </autogen>       <!-- 4 => up three lines-->
<!--            <autogen>__KeyToKey__ KeyCode::V, KeyCode::CURSOR_DOWN, KeyCode::CURSOR_DOWN, KeyCode::CURSOR_DOWN </autogen>     <!--V => down three lines-->
<!--      </item>-->
<!--        <item>-->
<!--            <name>Hold j+SDEF; to arrows</name>-->
<!--            <identifier>remap.j_to_homerow_arrows</identifier>-->
<!--            <autogen>__KeyOverlaidModifier__ KeyCode::J, KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_homerow_chickens, KeyCode::J</autogen>-->
<!--        </item>-->
<!--    </item>-->
<!--    -->
    <item>
        <name>J for select</name>
        <item>
            <name>holding J arrows w/ select under left hand</name>
            <identifier vk_config="true">notsave.homerow_m</identifier><!--with M depressed...-->
            <autogen>__KeyToKey__ KeyCode::Q, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L, ModifierFlag:: SHIFT_L</autogen>    <!-- Q => highlight start of line-->
            <autogen>__KeyToKey__ KeyCode::W, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L, ModifierFlag:: SHIFT_L</autogen>   <!-- W => highlight end of line-->
            <autogen>__KeyToKey__ KeyCode::A, KeyCode::J, KeyCode::E </autogen>                                                  <!-- E => 'JE' fix for je -->
            <autogen>__KeyToKey__ KeyCode::R, KeyCode::CURSOR_UP, ModifierFlag:: SHIFT_L</autogen>                               <!-- R => highlight up    -->
            
            <autogen>__KeyToKey__ KeyCode::A, KeyCode::J, KeyCode::A </autogen>                                                  <!-- A => 'JA' fix for la -->
            <autogen>__KeyToKey__ KeyCode::S, KeyCode::CURSOR_LEFT, ModifierFlag:: SHIFT_L</autogen>                             <!-- S => hightlight left -->
            <autogen>__KeyToKey__ KeyCode::D, KeyCode::CURSOR_RIGHT,ModifierFlag:: SHIFT_L</autogen>                             <!-- D => highlight right -->
            <autogen>__KeyToKey__ KeyCode::F, KeyCode::CURSOR_DOWN, ModifierFlag:: SHIFT_L</autogen>                             <!-- F => highlight down  -->
            <autogen>__KeyToKey__ KeyCode::G, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L,
                                  KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L, ModifierFlag:: SHIFT_L,
                                  KeyCode::C, ModifierFlag::COMMAND_L</autogen>                                                 <!-- G => highlight and copy entire line-->
            <autogen>__KeyToKey__ KeyCode::X, KeyCode::CURSOR_LEFT,  ModifierFlag:: OPTION_L, ModifierFlag:: SHIFT_L</autogen>   <!-- X => highlight next word left-->
            <autogen>__KeyToKey__ KeyCode::V, KeyCode::CURSOR_DOWN, ModifierFlag:: SHIFT_L,
                                  KeyCode::CURSOR_DOWN, ModifierFlag:: SHIFT_L,
                                  KeyCode::CURSOR_DOWN, ModifierFlag:: SHIFT_L</autogen>                                         <!-- V => highlight downwards three lines-->
            <autogen>__KeyToKey__ KeyCode::C, KeyCode::CURSOR_RIGHT, ModifierFlag:: OPTION_L, ModifierFlag:: SHIFT_L</autogen>   <!-- C => highlight next word right-->

            <autogen>__KeyToKey__ KeyCode::KEY_4, KeyCode::CURSOR_UP, ModifierFlag:: SHIFT_L,
                                                  KeyCode::CURSOR_UP, ModifierFlag:: SHIFT_L,
                                                  KeyCode::CURSOR_UP, ModifierFlag:: SHIFT_L </autogen>                          <!--4 => highlight upwards three lines-->

        </item>
        <item>
            <name>Hold J+SDEF; to highlight/select</name>
            <identifier>remap.J_to_homerow_digits</identifier>
            <autogen>__KeyOverlaidModifier__ KeyCode::J, KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_homerow_m, KeyCode::J</autogen>
        </item>
    </item>

    <!-- temp move of nav to k button for injured pointer; exactly the same as J -->
    <item>
        <name>K for navigation</name>
        <item>
            <name>Home Row Arrows</name>
            <apendix>arrows and quick movements under left hand with K depressed</appendix>
            <identifier vk_config="true">notsave.homerow_k</identifier>
            <autogen>__KeyToKey__ KeyCode::S, KeyCode::CURSOR_LEFT</autogen>                                              <!-- S => left -->
            <autogen>__KeyToKey__ KeyCode::D, KeyCode::CURSOR_RIGHT</autogen>                                             <!-- D => right-->
            <autogen>__KeyToKey__ KeyCode::F, KeyCode::CURSOR_DOWN</autogen>                                              <!-- F => down -->
            <autogen>__KeyToKey__ KeyCode::R, KeyCode::CURSOR_UP</autogen>                                                <!-- R => up   -->
            <autogen>__KeyToKey__ KeyCode::C, KeyCode::CURSOR_RIGHT, ModifierFlag:: OPTION_L</autogen>                    <!-- C => next word right-->
            <autogen>__KeyToKey__ KeyCode::X, KeyCode::CURSOR_LEFT, ModifierFlag:: OPTION_L</autogen>                     <!-- X => next word left-->
            <autogen>__KeyToKey__ KeyCode::W, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>                    <!-- W => end of line-->
            <autogen>__KeyToKey__ KeyCode::Q, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>                     <!-- Q => start of line-->
            <autogen>__KeyToKey__ KeyCode::KEY_4, KeyCode::CURSOR_UP, KeyCode::CURSOR_UP, KeyCode::CURSOR_UP </autogen>   <!-- 4 => up three lines-->
            <autogen>__KeyToKey__ KeyCode::V, KeyCode::CURSOR_DOWN, KeyCode::CURSOR_DOWN, KeyCode::CURSOR_DOWN </autogen> <!-- V => down three lines-->
            <autogen>__KeyToKey__ KeyCode::A, KeyCode::K, KeyCode::A </autogen>                                           <!-- A => 'KA' fix  -->
            <autogen>__KeyToKey__ KeyCode::A, KeyCode::K, KeyCode::E </autogen>                                           <!-- A => 'KE' fix  -->
            <autogen>__KeyToKey__ KeyCode::TAB, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L, KeyCode::TAB</autogen>     <!-- tab => beginning of line, tab  -->
        </item>
        <item>
            <name>Hold k+SDEF; to arrows</name>
            <identifier>remap.k_to_homerow_arrows</identifier>
            <autogen>__KeyOverlaidModifier__ KeyCode::K, KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_homerow_k, KeyCode::K</autogen>
        </item>
    </item>



<!--L for Command(and other modifiers) -->
    <item>
        <name>L for Command(and other modifiers)</name>
        <item>
            <name>L for Command; and other modifiers</name>
            <appendix>L for Command</appendix>
            <identifier vk_config="true">notsave.homerow_l</identifier>                 <!--with L depressed...-->
            <autogen>__KeyToKey__ KeyCode::E, KeyCode::L, KeyCode::E </autogen>                  <!-- E => 'LE' fix for le -->
            <autogen>__KeyToKey__ KeyCode::R, KeyCode::F2</autogen>                                                             <!-- R => key F1 (in cloud9 toggles brackets) -->
            <autogen>__KeyToKey__ KeyCode::T, KeyCode::SLASH, ModifierFlag::COMMAND_L</autogen>  <!-- T => toggles comment -->
            <autogen>__KeyToKey__ KeyCode::A, KeyCode::L, KeyCode::A </autogen>                  <!-- A => 'LA' fix for la -->
            <autogen>__KeyToKey__ KeyCode::S, KeyCode::L, KeyCode::S </autogen>                  <!-- S => 'LS' fix for ls -->
            <autogen>__KeyToKey__ KeyCode::D, KeyCode::L, KeyCode::D </autogen>                  <!-- D => 'LD' fix for ls -->
            <autogen>__KeyToKey__ KeyCode::F, KeyCode::S, ModifierFlag::COMMAND_L</autogen>      <!-- F => save (changed from S due to repeatedly activating during typing) -->
            <autogen>__KeyToKey__ KeyCode::Z, KeyCode::Z, ModifierFlag::COMMAND_L</autogen>      <!-- Z => undo -->
            <autogen>__KeyToKey__ KeyCode::X, KeyCode::X, ModifierFlag::COMMAND_L</autogen>      <!-- X => cut -->
            <autogen>__KeyToKey__ KeyCode::C, KeyCode::C, ModifierFlag::COMMAND_L,
                                  KeyCode::CURSOR_RIGHT  </autogen>                              <!-- C => copy (then cursor_right to avoid overtyping/de-select) -->
            <autogen>__KeyToKey__ KeyCode::V, KeyCode::V, ModifierFlag::COMMAND_L</autogen>      <!-- V => paste -->
            
            <autogen>__KeyToKey__ KeyCode::TAB, KeyCode::TAB, ModifierFlag::SHIFT_L</autogen>    <!-- TAB => back tab    -->
                                                                                                 <!-- available: Q, W,   -->
        </item>
        <item>
            <name>Hold L; for command</name>
            <identifier>remap.l_to_homerow_command</identifier>
            <autogen>__KeyOverlaidModifier__ KeyCode::L, KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_homerow_l, KeyCode::L</autogen>
        </item>
    </item>

    <!--tab, refresh, switch terminal and editor, file search-->
    <item>
        <name>H hold for cloud9 and Chrome commands</name>
        <item>
            <name>Home</name>
            <appendix>H for cloud9 and Chrome</appendix>
            <identifier vk_config="true">notsave.homerow_h</identifier>                                        <!--with H depressed...-->
            <autogen>__KeyToKey__ KeyCode::Q, KeyCode::S, ModifierFlag::COMMAND_L,
                                  KeyCode::TAB, ModifierFlag::CONTROL_L,
                                  KeyCode::R, ModifierFlag::COMMAND_L</autogen>                                        <!-- Q => save file; chrome tab right; chrome refresh -->
            <autogen>__KeyToKey__ KeyCode::W, KeyCode::TAB, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L</autogen>   <!-- W => CHROME tab left -->
            <autogen>__KeyToKey__ KeyCode::E, KeyCode::H, KeyCode::E </autogen>                                        <!-- E => 'HE', (fix for he typing issue) -->
            <autogen>__KeyToKey__ KeyCode::R, KeyCode::TAB, ModifierFlag::CONTROL_L</autogen>                          <!-- R => tab right CHROME -->
            <autogen>__KeyToKey__ KeyCode::T, KeyCode::H, KeyCode::T </autogen>                                        <!-- E => 'HT', (fix for ht typing issue) -->
            <autogen>__KeyToKey__ KeyCode::A, KeyCode::H, KeyCode::A </autogen>                                        <!-- A => 'HA', (fix for ha typing issue) -->
            <autogen>__KeyToKey__ KeyCode::S, KeyCode::BRACKET_LEFT, ModifierFlag::COMMAND_L </autogen>                <!-- S => tab Left CLOUD_9 (fixed!)-->
            <autogen>__KeyToKey__ KeyCode::D, KeyCode::S, ModifierFlag::COMMAND_L,
                                  KeyCode::S, ModifierFlag::OPTION_L</autogen>                                         <!-- D => save, toggle editor and terminal CLOUD_9-->
            <autogen>__KeyToKey__ KeyCode::F, KeyCode::BRACKET_RIGHT, ModifierFlag::COMMAND_L</autogen>                <!-- F => tab right CLOUD_9 (fixed!)-->
            <autogen>__KeyToKey__ KeyCode::G, KeyCode::ESCAPE, ModifierFlag::OPTION_L</autogen>                        <!-- G => PANE toggle CLOUD_9 -->
            <autogen>__KeyToKey__ KeyCode::Z, KeyCode::S, ModifierFlag::COMMAND_L,  <!-- save -->
                                  KeyCode::S, ModifierFlag::OPTION_L,               <!-- toggle to terminal -->
                                  KeyCode::CURSOR_UP, KeyCode::RETURN</autogen>                                        <!-- Z => save, toggle to terminal, run last command -->
            <autogen>__KeyToKey__ KeyCode::C, KeyCode::W, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L</autogen>    <!-- C => close other tabs CLOUD_9 -->
            <autogen>__KeyToKey__ KeyCode::K, KeyCode::L, ModifierFlag::SHIFT_L, KeyCode::E, ModifierFlag::SHIFT_L, KeyCode::E, ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
            <name>Hold j+SDEF; to arrows</name>
            <identifier>remap.h_to_homerow_digits</identifier>
            <autogen>__KeyOverlaidModifier__ KeyCode::H, KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_homerow_h, KeyCode::H</autogen>
        </item>
    </item>
    
    <item>
        <name>D for delete etc.</name>
        <item>
            <identifier vk_config="true">notsave.homerow_d</identifier><!--with D depressed...-->
             <autogen>__KeyToKey__ KeyCode::J, KeyCode::DELETE </autogen>                                   <!-- J => DELETE(regular, backwards)  -->
             <autogen>__KeyToKey__ KeyCode::K, KeyCode::DELETE, ModifierFlag::FN</autogen>                  <!-- K => DELETE FORWARDS  -->
             <autogen>__KeyToKey__ KeyCode::L, KeyCode::D, ModifierFlag::COMMAND_L</autogen>                <!-- L => DELETE ENTIRE LINE  cloud 9 specific command -->
             <autogen>__KeyToKey__ KeyCode::O, KeyCode::D, KeyCode::O </autogen>                            <!-- O => 'DO' fix -->
             <autogen>__KeyToKey__ KeyCode::I, KeyCode::D, KeyCode::I </autogen>                            <!-- I => 'DI' fix -->
             <autogen>__KeyToKey__ KeyCode::U, KeyCode::D, KeyCode::U </autogen>                            <!-- U => 'DU' fix -->

        </item>
        <item>
            <name>Hold D for DELETE etc.</name>
            <identifier>remap.D_to_homerow_digits</identifier>
            <autogen>__KeyOverlaidModifier__ KeyCode::D, KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_homerow_d, KeyCode::D</autogen>
        </item>
    </item>

    <item>
        <name>M for move line up/down</name>
        <item>
            <identifier vk_config="true">notsave.homerow_M</identifier><!--with M depressed...-->
            <autogen>__KeyToKey__ KeyCode::A, KeyCode::M, KeyCode::A </autogen>                            <!-- A => 'MA' fix for la -->
            <autogen>__KeyToKey__ KeyCode::E, KeyCode::M, KeyCode::E </autogen>                            <!-- E => 'ME' fix for le -->
            <autogen>__KeyToKey__ KeyCode::R, KeyCode::CURSOR_UP, ModifierFlag::OPTION_L</autogen>         <!-- R => MOVES LINE UP   -->
            <autogen>__KeyToKey__ KeyCode::F, KeyCode::CURSOR_DOWN, ModifierFlag::OPTION_L</autogen>       <!-- F => MOVES LINE DOWN -->

        </item>
        <item>
            <name>M for move line up/down</name>
            <identifier>remap.M_to_homerow_digits</identifier>
            <autogen>__KeyOverlaidModifier__ KeyCode::M, KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_homerow_M, KeyCode::M</autogen>
        </item>
    </item>


    <item>
        <name>N to copy line up/down</name>
        <item>
            <identifier vk_config="true">notsave.homerow_N</identifier><!--with N depressed...-->
            <autogen>__KeyToKey__ KeyCode::A, KeyCode::N, KeyCode::A </autogen>                                                     <!-- A => 'NA' fix for la -->
            <autogen>__KeyToKey__ KeyCode::E, KeyCode::N, KeyCode::E </autogen>                                                     <!-- E => 'NE' fix for le -->
            <autogen>__KeyToKey__ KeyCode::R, KeyCode::CURSOR_UP, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L</autogen>         <!-- R => COPY LINE UP   -->
            <autogen>__KeyToKey__ KeyCode::F, KeyCode::CURSOR_DOWN, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L</autogen>       <!-- F => COPY LINE DOWN -->
        </item>
        <item>
            <name>N for move line up/down</name>
            <identifier>remap.N_to_homerow_digits</identifier>
            <autogen>__KeyOverlaidModifier__ KeyCode::N, KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_homerow_N, KeyCode::N</autogen>
        </item>
    </item>

    <item>
        <name>simultaneous D and K for delete</name>
        <identifier>remap.simultaneouskeypresses_d_k</identifier>
        <autogen>__SimultaneousKeyPresses__ KeyCode::D, KeyCode::J, KeyCode::DELETE </autogen>
    </item>    <!-- for speed and accuracy the left hand holds have been doplicated onto double presses
        (aka f and j at the same time do the same thing as hold f press j -->
    <item>
        <name>F for RETURN etc.</name>
        <item>
            <identifier vk_config="true">notsave.homerow_f</identifier>    <!--with F depressed...-->
            <autogen>__KeyToKey__ KeyCode::H, KeyCode::CURSOR_UP, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L, KeyCode::RETURN</autogen> <!-- H => Insert line above(line up, end of line, return)  -->
            <autogen>__KeyToKey__ KeyCode::J, KeyCode::RETURN </autogen>   <!-- J => RETURN  -->
            <autogen>__KeyToKey__ KeyCode::K, KeyCode::CURSOR_RIGHT,
                ModifierFlag::COMMAND_L, KeyCode::RETURN </autogen>        <!-- K => end of line, then RETURN (adds line below)  -->
            <autogen>__KeyToKey__ KeyCode::SEMICOLON, KeyCode::CURSOR_DOWN,
                KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L, </autogen>  <!-- L => START of next line(does not add line below) -->
            <autogen>__KeyToKey__ KeyCode::O, KeyCode::F, KeyCode::O </autogen>                            <!-- O => 'FO' fix -->
            <autogen>__KeyToKey__ KeyCode::I, KeyCode::F, KeyCode::I </autogen>                            <!-- I => 'FI' fix -->
            <autogen>__KeyToKey__ KeyCode::U, KeyCode::F, KeyCode::U </autogen>                            <!-- U => 'FU' fix -->

        </item>
        <item>
            <name>Hold F for RETURN etc.</name>
            <identifier>remap.F_to_commands</identifier>
            <autogen>__KeyOverlaidModifier__ KeyCode::F, KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_homerow_f, KeyCode::F</autogen>
        </item>
        <!-- simultaneous key presses below -->
        <item>
            <name>simultaneous F and J for return</name>
            <identifier>remap.simultaneouskeypresses_f_j</identifier>
            <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::J, KeyCode::RETURN </autogen>
        </item>
        <item>
            <name>simultaneous F and K for end of line, then return</name>
            <identifier>remap.simultaneouskeypresses_f_k</identifier>
            <autogen>__SimultaneousKeyPresses__ KeyCode::F, KeyCode::K, KeyCode::CURSOR_RIGHT,
                ModifierFlag::COMMAND_L, KeyCode::RETURN</autogen>
        </item>
    </item>
    
<!--  NON-MODIFIER key exchanges  -->
    <item>
        <name>[ for delete</name> <!-- [ "left bracket"is now delete -->
        <identifier>private.bracket_left_to_delete</identifier>
        <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, KeyCode::DELETE</autogen>
        <autogen>__KeyToKey__ KeyCode::F1, KeyCode::R, KeyCode::A, KeyCode::I, KeyCode::L,
            KeyCode::S, KeyCode::SPACE, KeyCode::S, KeyCode::SPACE, KeyCode::MINUS, KeyCode::B,
            KeyCode::SPACE, KeyCode::KEY_4, ModifierFlag::SHIFT_L, KeyCode::I, ModifierFlag::SHIFT_L,
            KeyCode::P, ModifierFlag::SHIFT_L, KeyCode::SPACE, KeyCode::MINUS, KeyCode::P,
            KeyCode::SPACE, KeyCode::KEY_4, ModifierFlag::SHIFT_L, KeyCode::P, ModifierFlag::SHIFT_L,
            KeyCode::O, ModifierFlag::SHIFT_L, KeyCode::R, ModifierFlag::SHIFT_L,
            KeyCode::T, ModifierFlag::SHIFT_L</autogen>                                             <!-- F1 => rails s -b $IP -p $PORT -->

    </item>

    <item>
        <name>delete deactivate </name> <!-- delete is now deactivated to encourage use of the bracket key -->
        <identifier>private.bracket_delete_deactivate</identifier>
        <autogen>__KeyToKey__ KeyCode::DELETE, KeyCode::CURSOR_LEFT, KeyCode::CURSOR_RIGHT</autogen>
    </item>

    <item>
        <identifier>remap.samples_keytokey_delayed_action_browser refresh</identifier>
        <name>Option::KEYTOKEY_DELAYED_ACTION_MILLISECONDS</name>
        <appendix>doubles key presses...in progress</appendix>
        
        <!-- qq => refresh browser window   -->
        <autogen>
            __KeyToKey__
            KeyCode::Q,
            KeyCode::VK_NONE,
            
            Option::KEYTOKEY_DELAYED_ACTION,
            KeyCode::Q,
            
            Option::KEYTOKEY_DELAYED_ACTION_CANCELED_BY, KeyCode::Q,
            KeyCode::R, ModifierFlag::COMMAND_L,
            KeyCode::VK_KEYTOKEY_DELAYED_ACTION_DROP_EVENT,
            
            Option::KEYTOKEY_DELAYED_ACTION_MILLISECONDS,
            Millisecond::RawValue::200,
        </autogen>
        
        <!-- vv => cloud9 search box  -->
        <autogen>
            __KeyToKey__
            KeyCode::V,
            KeyCode::VK_NONE,
            
            Option::KEYTOKEY_DELAYED_ACTION,
            KeyCode::V,
            
            Option::KEYTOKEY_DELAYED_ACTION_CANCELED_BY, KeyCode::V,
            KeyCode::E, ModifierFlag::COMMAND_L,
            KeyCode::VK_KEYTOKEY_DELAYED_ACTION_DROP_EVENT,
            
            Option::KEYTOKEY_DELAYED_ACTION_MILLISECONDS,
            Millisecond::RawValue::200,
        </autogen>
        
        <!--    '' => ''cursor_left (so you always end up between the quotes) -->
        <autogen>
            __KeyToKey__
            KeyCode::QUOTE,
            KeyCode::VK_NONE,
            
            Option::KEYTOKEY_DELAYED_ACTION,
            KeyCode::QUOTE,
            
            Option::KEYTOKEY_DELAYED_ACTION_CANCELED_BY, KeyCode::QUOTE,
            KeyCode::QUOTE,
            KeyCode::QUOTE,
            KeyCode::CURSOR_LEFT,
            KeyCode::VK_KEYTOKEY_DELAYED_ACTION_DROP_EVENT,
            
            Option::KEYTOKEY_DELAYED_ACTION_MILLISECONDS,
            Millisecond::RawValue::200,
        </autogen>
    </item>

    
    <!--    holding down K makes a digit pad under qwer,sdf,xcv -->
    <!--                                           0123,456,789 -->
    <item>
        <name>Home Row digits Overlay</name>
        <item>
            <name>Home Row Digits</name>
            <appendix>Overlay digits onto the home row (ASDFGHJKL)</appendix>
            <identifier vk_config="true">notsave.homerow_muscrats</identifier>
            <autogen>__KeyToKey__ KeyCode::W, KeyCode::KEY_1</autogen>
            <autogen>__KeyToKey__ KeyCode::E, KeyCode::KEY_2</autogen>
            <autogen>__KeyToKey__ KeyCode::R, KeyCode::KEY_3</autogen>
            <autogen>__KeyToKey__ KeyCode::S, KeyCode::KEY_4</autogen>
            <autogen>__KeyToKey__ KeyCode::D, KeyCode::KEY_5</autogen>
            <autogen>__KeyToKey__ KeyCode::F, KeyCode::KEY_6</autogen>
            <autogen>__KeyToKey__ KeyCode::X, KeyCode::KEY_7</autogen>
            <autogen>__KeyToKey__ KeyCode::C, KeyCode::KEY_8</autogen>
            <autogen>__KeyToKey__ KeyCode::V, KeyCode::KEY_9</autogen>
            <autogen>__KeyToKey__ KeyCode::Q, KeyCode::KEY_0</autogen>
        </item>
        <item>
            <name>Hold k; digits under left hand</name>
            <identifier>remap.k_to_homerow_digits</identifier>
            <autogen>__KeyOverlaidModifier__ KeyCode::K, KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_homerow_muscrats, KeyCode::K</autogen>
        </item>
    </item>
</root>



